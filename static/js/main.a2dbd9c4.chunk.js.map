{"version":3,"sources":["EmbedForm.js","SheetUtil.js","WorkshopMenu.js","Grid.js","ImageScroll.js","App.js","serviceWorker.js","index.js","grex_images/STEM.jpg","grex_images/girls.jpg","grex_images/wheat.jpg","grex_images/town.jpg"],"names":["ReadSheetTest","state","show","this","setState","_this2","form","buttonText","react_default","a","createElement","src","width","height","frameborder","marginheight","marginwidth","es_button","type","onClick","handleClick","React","Component","SHEET_INFO","apiKey","discoveryDocs","spreadsheetId","WorkshopGrid","workshops","error","initClient","window","gapi","client","init","then","callback","_this","onLoad","load","sheets","spreadsheets","values","get","range","raw","result","map","workshop","category","instructor","title","description","data","temp","ws","i","push","createWorkshops","table","count","children","both","col","className","span","popover","content","trigger","overlayStyle","row","gutter","console","log","ImageScroll","style","innerWidth","display","lib_default","dots","speed","autoplay","autoplaySpeed","centerMode","centerPadding","variableWidth","adaptiveHeight","overflow","logo1","alt","logo2","logo3","logo4","App","src_ImageScroll_0","src_Grid","EmbedForm","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a2dbd9c4.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\n\nclass ReadSheetTest extends React.Component {\n  state = {\n    show: false\n  }\n    \n  handleClick() {\n    this.setState({ show: !this.state.show });\n  }\n\n  render() {\n    var form = null;\n    var buttonText = \"Show Form\";\n    if (this.state.show) {\n        buttonText = \"Hide Form\";\n        form = (\n          <div>\n            <br />\n            <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSd1sLdB-sNR0X2F5C6lMEPU_tagEjNvMIaq3Ar-1Krs9mtl8A/viewform?embedded=true\"\n             width=\"600\" height=\"1255\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">\n              Loading...\n            </iframe>\n          </div>\n        );\n    }\n    \n    return (\n      <div>\n        <Button type=\"primary\" onClick={() => this.handleClick()}>\n            {buttonText}\n        </Button>\n        {form}\n      </div>\n    );\n  }\n}\n\nexport default ReadSheetTest\n","// Based on https://blog.416serg.me/building-an-app-using-google-sheets-api-react-d69681d22ce1\n\nexport var SHEET_INFO = {\n  apiKey: \"AIzaSyBIe-MGvrJ2560PsAgDJhbou_ggIa3Ys6A\",\n  discoveryDocs: \n    [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n  spreadsheetId: \"1h-UJlgXtuydbPonqGLyPRx3FG8hp9XANk_TxjoQ46uw\"\n};\n\nexport function SHEET_LOAD(callback) {\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\n    window.gapi.client.sheets.spreadsheets.values\n      .get({\n        spreadsheetId: SHEET_INFO.spreadsheetId,\n        range: \"Sheet1!A2:D\"\n      })\n      .then(\n        raw => {\n          const data = raw.result.values;\n\n          const workshops = data.map(workshop => ({\n            category: workshop[0],\n            instructor: workshop[1],\n            title: workshop[2],\n            description: workshop[3]\n          })) || [];\n\n          callback({\n            workshops\n          });\n        },\n        raw => {\n          callback(false, raw.result.error);\n        }\n      );\n  });\n};","import React from 'react';\nimport { Popover } from 'antd';\nimport './Grid.css';\n\nclass WorkshopMenu extends React.Component {\n    render() {\n        const content = (\n            <div>\n                <p>Julie Lauenburg: Art Educator; Mira Gobel: Principal</p>\n                <p>Fuse physics and art with pendulum painting! Warning: could be messy.</p>\n            </div>\n        );\n        const tagline = \"Art of the Pendulum\";\n        const workshopName = \"Art in Physics\";\n        return( \n            <Popover content={content} title={ tagline } trigger=\"hover\" overlayStyle={{ width: \"300px\" }}>\n                        <div className=\"gutter-box\"> { workshopName } </div>\n            </Popover>\n        )\n    }\n}\n\nexport default WorkshopMenu;","import React from 'react';\nimport { Row, Col, Popover } from 'antd';\nimport './Grid.css';\nimport WorkshopMenu from './WorkshopMenu.js';\nimport { SHEET_LOAD, SHEET_INFO } from './SheetUtil';\n\nclass WorkshopGrid extends React.Component {\n    state = {\n        workshops: [],\n        error: null\n    }\n\n    componentDidMount() {\n        window.gapi.load(\"client\", this.initClient);\n    }\n\n    initClient = () => {\n        window.gapi.client\n            .init({\n                apiKey: SHEET_INFO.apiKey,\n                discoveryDocs: SHEET_INFO.discoveryDocs\n            })\n            .then(() => {\n                SHEET_LOAD(this.onLoad);\n        });\n    }\n\n    onLoad = (data, error) => {\n        if (data) {\n            var temp = data.workshops;\n            var workshops = [];\n            temp.map((ws, i) => {workshops.push(ws)});\n            this.setState({ workshops });\n        } else {\n            this.setState({ error });\n        }\n    }\n\n    createWorkshops = () => {\n        let table = []\n\n        let count = 0;\n        let children = [];\n        this.state.workshops.map((ws) => {\n            const both = (<div><p>{ws.description}</p><p>Instructor: {ws.instructor}</p></div>);\n            children.push(\n                 <Col className=\"gutter-row\" span={4}>\n                    <Popover content={both} title={ws.title} trigger=\"hover\" overlayStyle={{ width: \"300px\" }}>\n                        <div className=\"gutter-box\"> {ws.category} </div>\n                    </Popover>\n                 </Col>);\n            count = count + 1;\n            if (count >= 6) {\n                count = 0;\n                table.push(<Row gutter={60}>{children}</Row>);\n                children = [];\n            }\n        });\n\n        return table\n    }\n    \n    render() {\n        if (this.state.error) {\n            return <div>{this.state.error}</div>;\n        }\n        \n        // EXAMPLE. REMOVE THIS LINE LATER!\n        console.log(this.state.workshops);\n        \n        const mycontent = (\n            <div>\n                <p>Content A</p>\n                <p>Content B</p>\n            </div>\n        );\n        const mytagline = \"Title\";\n        const myworkshopName = \"Category\";\n        return (\n            <div className=\"gutter-example\">\n                {this.createWorkshops()}\n            \n            </div>\n        )\n    }\n}\n\nexport default WorkshopGrid\n","import React from 'react';\nimport Slider from 'react-slick';\nimport './ImageScroll.css';\nimport './App.css'\nimport logo1 from './grex_images/STEM.jpg';\nimport logo2 from './grex_images/girls.jpg';\nimport logo3 from './grex_images/wheat.jpg';\nimport logo4 from './grex_images/town.jpg';\n\nclass ImageScroll extends React.Component {\n    render() {\n        var settings = {\n            dots: true,\n            speed: 1000,\n            autoplay: true,\n            autoplaySpeed: 5000,\n            centerMode: true,\n            centerPadding: '0px',\n            variableWidth: true,\n            adaptiveHeight: true,\n            overflow: 'hidden'\n            \n        };\n        return (\n          <div style={{\n            width: window.innerWidth,\n            display: true\n          }}>\n            <Slider {...settings}>\n                <div><h3><img src={logo1} height=\"300px\" alt=\"logo\" /></h3></div>\n                <div><h3><img src={logo2} height=\"300px\" alt=\"logo\" /></h3></div>\n                <div><h3><img src={logo3} height=\"300px\" alt=\"logo\" /></h3></div>\n                <div><h3><img src={logo4} height=\"300px\" alt=\"logo\" /></h3></div>\n            </Slider>\n          </div>\n        )\n    }\n}\n\n\nexport default ImageScroll","import React, { Component } from 'react';\nimport './App.css';\nimport EmbedForm from './EmbedForm.js';\nimport WorkshopGrid from './Grid.js';\nimport ImageScroll from './ImageScroll.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <header className=\"App-header\">\n          <p>\n            <ImageScroll />\n          </p>\n          <p className=\"App-header-text\">\n            Welcome to Great Explorations!\n          </p>\n          <p className=\"App-text\">\n            Below you will find all of the 2019 workshops.\n          </p>\n          <p>\n            <WorkshopGrid />\n          </p>\n          <p>\n            <EmbedForm />\n          </p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/STEM.0130cd50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/girls.bf759622.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wheat.605e597d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/town.9a0d7027.jpg\";"],"sourceRoot":""}